option java_package = "crosby.binary";

//protoc --java_out=../.. osmformat.proto

/* OSM Binary file format 

Intended to support extensions and allow extensions to append
additional data to the file, such as indexes.

We do not support removing blocks of data from a file.

Fileformat is layered to two levels. A 'storage' layer and a file layer.

*/

//
//  UTILS: Storing a large literal value.
//

/* Represents a compressed blob. The field indicates and demultiplexes the
format. */

message BBox {
   required sint64 left = 1;
   required sint64 right = 2;
   required sint64 top = 3;
   required sint64 bottom = 4;
}

//
//  STORAGE LAYER: Storing primitives.
//

message StringTable {
   repeated bytes s = 1;
}

/* Metadata Included into each primitive. */
message Info {
   optional int32 version = 1 [default = -1];
   optional int32 timestamp = 2;
   optional int64 changeset = 3;
   optional int32 uid = 4;
   optional int32 user_sid = 5;
}

message ChangeSet {
   required int64 id = 1;
   // Parallel arrays.
   repeated uint32 keys = 2 [packed = true]; // String IDs.
   repeated uint32 vals = 3 [packed = true]; // String IDs.

   optional Info info = 4;

   required int32 created_at = 8;
   optional int32 closetime_delta = 9;
   required bool open = 10;
   optional BBox bbox = 11;
}


message Node {
   required sint64 id = 1;
   // Parallel arrays.
   repeated uint32 keys = 2 [packed = true];  // String IDs.
   repeated uint32 vals = 3 [packed = true]; // String IDs.

   optional Info info = 4;

   required sint64 lat = 8;
   required sint64 lon = 9;
}

/* Each array corresponds to a column of nodes. */
message DenseNodes {
   repeated sint64 id = 1 [packed = true]; // DELTA coded

   repeated Info info = 4;

   repeated sint64 lat = 8 [packed = true]; // DELTA coded
   repeated sint64 lon = 9 [packed = true]; // DELTA coded
}


message Way {
   required int64 id = 1;
   // Parallel arrays.
   repeated uint32 keys = 2 [packed = true];
   repeated uint32 vals = 3 [packed = true];

   optional Info info = 4;

   repeated sint64 refs = 8 [packed = true];  // DELTA encoded
}

message Relation {
  enum MemberType {
    NODE = 0;
    WAY = 1;
    RELATION = 2;
  } 
   required int64 id = 1;
   // Parallel arrays.
   repeated uint32 keys = 2 [packed = true];
   repeated uint32 vals = 3 [packed = true];

   optional Info info = 4;

   // Parallel arrays
   repeated int32 roles_sid = 8 [packed = true];
   repeated sint64 memids = 9 [packed = true]; // DELTA encoded
   repeated MemberType types = 10 [packed = true];
}


// Group of OSMPrimitives. All primitives in a group must be the same type.
message PrimitiveGroup {
  repeated Node     nodes = 1;
  optional DenseNodes dense = 2;
  repeated Way      ways = 3;
  repeated Relation relations = 4;
  repeated ChangeSet changesets = 5;
}


message PrimitiveBlock {
  required StringTable stringtable = 1;
  // One of these is included.
  repeated PrimitiveGroup primitivegroup = 2;

  optional int32 granularity = 17 [default=100]; 
  optional int32 date_granularity = 18 [default=1000]; 

  /* Lat&lon are
  measured in units of granularity equal to 1 nanodegrees. The default
  100 corresponds to about 1cm on the ground, and a full lat or lon fits 
  into 32 bits. */


  // Optional extensions, also included in index data.
  //optional BBox bbox = 100;
}

message HeaderBlock {
  required BBox bbox = 1;
}
